# Generated by Django 5.0.6 on 2024-06-26 09:21

import common.kgs
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.CharField(default=common.kgs.generate_unique_id, editable=False, max_length=50, primary_key=True, serialize=False)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='email address')),
                ('password', models.CharField(max_length=600, null=True)),
                ('transaction_pin', models.CharField(max_length=400, null=True)),
                ('firstname', models.CharField(max_length=255)),
                ('lastname', models.CharField(max_length=255)),
                ('phone', models.CharField(blank=True, max_length=17, null=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='users/')),
                ('role', models.CharField(choices=[('Admin', 'Admin'), ('Admin View Only', 'Admin View Only'), ('Divisional Head', 'Divisional Head'), ('Agent Network Manager', 'Agent Network Manager'), ('Regional Leader', 'Regional Leader'), ('Relationship Officer', 'Relationship Officer'), ('Super Agent', 'Super Agent'), ('Agent', 'Agent'), ('Tele-Marketer', 'Tele-Marketer'), ('NSIP-Manager', 'NSIP-Manager'), ('Merchant Manager', 'Merchant Manager'), ('CSO', 'CSO'), ('MaComm', 'MaComm'), ('Risk and Compliance', 'Risk and Compliance'), ('Settlement and Reconciliation', 'Settlement and Reconciliation'), ('OSHIS Supervisor', 'OSHIS Supervisor'), ('Merchant Supervisor', 'Merchant Supervisor')], max_length=100)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('last_login', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('verified', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ('lastname', 'firstname'),
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=255, null=True)),
                ('token_type', models.CharField(choices=[('CreateToken', 'CreateToken'), ('ResetToken', 'ResetToken')], default='CreateToken', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
